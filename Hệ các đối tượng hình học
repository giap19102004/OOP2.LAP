//Tạo lớp cha có tên là Shape có 2 thuộc tính color & filled 



public class Shape {
    private String color = "green";
    private boolean filled = true;
    public  Shape(){
//phạm vi truy cập của 2 thuộc tính là private
//color có kiểu dữ liệu là Sring , filled là boolean có gán giá trị color ="green" , filled =  true.
//ta có các phương thức : phương thức không tham số + phương thức có 2 tham số + phương thức get và setter     
    }
    public Shape(String color, boolean filled){
        this.color = color;
        this.filled = filled;

    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    public boolean isFilled() {
        return filled;
    }

    public void setFilled(boolean filled) {
        this.filled = filled;
    }
//cài đè phương thức toString trả về chuỗi ký tự
    @Override
    public String toString() {
        return "A Shape with color of "
                + getColor()
                + " and "
                + (isFilled() ? "filled" : "not filled");
    }





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






Lớp Cicrle
 //tạo 1 lớp Circle là lớp con của Shape
 
 

public class Circle extends Shape {
   protected  double radius = 0.1;
//thêm thuộc tính riêng là radius kiểu dữ liệu double có giá trị bằng 0.1
//thêm các phương thức : phương thức không tham số + phương thức có 3 tham số + phương thức set và get của radius + phương thức tính diện tích & phương thức tính thể tích
    public Circle(){

    }
public Circle(String color,boolean filled , double radius){
    super(color, filled);
    this.radius = radius;

}
    public double getRadius() {
        return radius;
    }

    public void setRadius(double radius) {
        this.radius = radius;
    }

    public double getArea() {
        return radius * radius * Math.PI;
    }

    public double getPerimeter() {
        return 2 * radius * Math.PI;
    }
    
//cài đè phương thức toString trả về chuỗi ký tự
    @Override
    public String toString() {
        return "A Circle with radius="
                + getRadius()
                + ", which is a subclass of "
                + super.toString();
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

lớp Rectangle
//Tạo lớp con Rectangle kế thừa của lớp Shape.
public class Rectangle  extends Shape{
// cho hai thuộc tính width, length  cùng thuộc kiểu dữ liệu double cùng có giá trị bằng 0.1.
    private double width = 1.0;
    private double length = 1.0;
//tạo các phương thức : phương thức không tham số + phương thức có 2 tham số + phương thức có 4 tham số + phương thức set và get của các thuộc tính + phươnh thức tính diện
//tích và phương thức tính thể tích .
    public Rectangle() {
    }

    public Rectangle(double width, double length) {
        this.width = width;
        this.length = length;
    }

    public Rectangle(double width, double length, String color, boolean filled) {
        super(color, filled);
        this.width = width;
        this.length = length;
    }

    public double getWidth() {
        return width;
    }

    public void setWidth(double width) {
        this.width = width;
    }

    public double getLength() {
        return length;
    }

    public void setLength(double length) {
        this.length = length;
    }

    public double getArea() {
        return width * this.length;
    }

    public double getPerimeter() {
        return 2 * (width + this.length);
    }
//cài đè phương thức toString trả về chuỗi ký tự
    @Override
    public String toString() {
        return "A Rectangle with width="
                + getWidth()
                + " and length="
                + getLength()
                + ", which is a subclass of "
                + super.toString();
    }
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
lớp Spuare






//tạo lớp Square kế thừa Shape
public class Square extends Rectangle{
//Không có thêm thuộc tính nào
    public Square() {
    }
//Phương thức khởi tạo mà không cần đối số đầu vào sẽ đặt giá trị mặc định cho width và height (side) là 1.0.
//Phương thức khởi tạo mà không cần đối số đầu vào sẽ đặt giá trị mặc định cho width và height (side) là 1.0.
    public Square(double side) {
        super(side, side);
    }

    public Square(double side, String color, boolean filled) {
        super(side, side, color, filled);
    }

    public double getSide() {
        return getWidth();
    }

    public void setSide(double side) {
        setWidth(side);
        setLength(side);
    }
//Cài đè phương thức setWidth và getWidth để chúng thay đổi giá trị của cả width và height, để bảo toàn tính “vuông”.
    @Override
    public void setWidth(double width) {
        setSide(width);
    }

    @Override
    public void setLength(double length) {
        setSide(length);
    }
 cài đè phương thức toString trả về chuỗi ký tự 
    @Override
    public String toString() {
        return "A Square with side="
                + getSide()
                + ", which is a subclass of "
                + super.toString();
    }
}
